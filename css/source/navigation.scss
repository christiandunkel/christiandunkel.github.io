// hidden windows, can be triggered to be shown

.hidden-window {
    position: fixed; top: 0; left: 0; z-index: 9998;
    width: 100%; height: 100%;
    overflow: hidden;

    > * {
        position: absolute; top: 0; left: 0;
        width: 100%; height: 100%;

        &.red {
            z-index: 1;
            background-color: $red;
            @include transition(.4s);
        }

        &.blue {
            z-index: 2;
            background-color: $blue;
            @include transition(.4s .06s);
        }

        &.orange {
            z-index: 3;
            background-color: $orange;
            @include transition(.4s .11s);
        }

        &.green {
            z-index: 4;
            background-color: $green;
            @include transition(.4s .15s);
        }

        &.content {
            z-index: 5;
            background-color: white;
            @include transition(.4s .18s);
            
            .container {
                position: absolute; top: 0; left: 50%;
                max-width: $max-width; width: 100%; height: 100%;
                @include transform(translate(-50%,0));
            }

            .cross {
                position: absolute; top: 15px; right: 15px; z-index: 2;
            }

            .center {
                display: inline-block; position: absolute; top: 50%; left: 50%; z-index: 1;
                max-width: 300px; width: 100%; padding: 15px;
                text-align: center;
                @include transform(translate(-50%,-50%));
            }
        }
        
        @include ON_REDUCED_MOTION {
            @include transition-property(none !important);
        }
    }

    &.hidden {
        top: -110%;
        @include transition(all 0s .7s);
        
        @include ON_REDUCED_MOTION {
            @include transition-property(none);
        }

        > * {
            @include transform(translate(0, -100%));

            &.red       {@include transition(.35s .05s);}
            &.blue      {@include transition(.3s .025s);}
            &.orange    {@include transition(.25s .0125s);}
            &.green     {@include transition(.2s .00625s);}
            &.content   {@include transition(.15s);}
        }
    }
    
}

.cross {
    position: relative; width: 44px; height: 44px;
    @include transition(.1s);
    
    &:before, &:after {
        content: '';
        position: absolute; top: 44%; left: 0;
        width: 100%; height: 12%;
        background-color: #6d6d6d;
        @include border-radius(5px);
        @include transition(.2s);
    }
    
    &:before {
        @include transform(rotate(45deg));
    }
    
    &:after {
        @include transform(rotate(-45deg));
    }
    
    &:hover {
        &:before {
            @include transform(rotate(40deg));
        }
        &:after {
            @include transform(rotate(-40deg));
        }
    }
    
    &:active {
        &:before, &:after {
            left: 10%;
            width: 80%;
        }
    }
}





// navigation bar

#nav {
    position: fixed; top: 0; right: 0; z-index: 9001;
    width: 100%; height: 76px;
    background-color: white;
    text-align: center;
    @include box-shadow(
        0 1px 1px rgba(0,0,0,.03),
        0 2px 2px rgba(0,0,0,.03),
        0 4px 4px rgba(0,0,0,.03),
        0 8px 8px rgba(0,0,0,.03)
    );
    @include animation(slide-in-from-top .5s .2s, hidden .2s);
    @include transition(.5s .2s);
    
    @include ON_REDUCED_MOTION {
        @include animation(none);
    }
    
    .bar {
        display: inline-block;
        max-width: $max-width; width: 100%; height: 100%; padding: 0 15px;
        text-align: right;
    }
    
    #mobile-menu {
        float: left; position: relative;
        height: 100%;
        
        .overlay {
            display: none;
        }
        
        .content {
            height: 100%;
        }
        
        @include ON_MOBILE {
            float: none;
            position: fixed; top: 0; right: -110%; z-index: 9998;
            width: 100%; height: 100%;
            @include transition(0s .2s);
            
            .overlay {
                display: block; position: absolute; top: 0; left: 0; z-index: 1;
                width: 100%; height: 100%;
                background: black;
                @include opacity(0);
                @include transition(.17s);
            }
            
            .content {
                position: absolute; top: 0; right: 0; z-index: 2;
                max-width: 320px; width: 90%; height: 100%;
                background: white;
                @include box-shadow(
                    -1px 0 1px rgba(0,0,0,.03),
                    -2px 0 2px rgba(0,0,0,.03),
                    -4px 0 4px rgba(0,0,0,.03),
                    -8px 0 8px rgba(0,0,0,.03)
                );
                @include transform(translate(105%,0));
                @include transition(.2s);
                @include transition(.2s cubic-bezier(.45, -0.47, .86, 1));
                
                // extra white padding to the right, so that the cubic-bezier transition
                // does not move .content so wide to the left, that one can see the background
                &:after {
                    content: '';
                    display: block; position: absolute; top: 0; left: 100%; z-index: 1;
                    width: 100px; height: 100%;
                    background: white;
                    @include transform(translate(-1px,0));
                }
                    
                .center {
                    display: inline-block; position: absolute; top: 50%; left: 0;
                    width: 100%;
                    @include transform(translate(0,-50%));

                    a {
                        display: block;
                        height: auto; padding: 20px 30px;
                        font-size: 30px; line-height: 1em; text-align: center;
                    }
                }
                
                .hover-bg,
                a.a0 {
                    display: none !important;
                }
            }
            
            &.show {
                right: 0;
                @include transition(0s);
                
                .overlay {
                    @include opacity(.2);
                }
                
                .content {
                    @include transform(translate(0,0));
                    @include transition(.2s);
                }
            }
        }
    }

    br {
        display: none;
    }

    a {
        display: inline-block; position: relative; z-index: 9999;
        height: 100%; margin: 0 2px 0 0; padding: 28px 13px;
        overflow: hidden;
        font-size: 20px; line-height: 1em; text-decoration: none;

        &.a0 {
            display: inline-block;
            font-size: 0;

            svg {
                width: 20px; height: 20px;
            }

            &.active, &:hover {
                polygon {
                    fill: $red;
                }
            }
        }

        &.a1.active, &.a1:hover {color: $blue;}
        &.a2.active, &.a2:hover {color: $green;}
        &.a3.active, &.a3:hover {color: $orange;}

        &.a1, &.a2, &.a3 {
            background: none;
            color: #676d86;

            &:before, 
            &:hover:before {
                @include opacity(0);
                @include transform(none);
            }
        }
    }

    .hover-bg {
        display: none; position: absolute; top: 15px; left: -100%; z-index: 1;
        height: 46px;
        border: 2px solid white;
        @include transition(.2s);

        @include ON_REDUCED_MOTION {
            @include transition(none);
        }
    }

    a.a0.active ~ .hover-bg {
        @include border-radius(20px);
    }

    a:not(.a0).active ~ .hover-bg {
        @include border-radius(4px);
    }

    a.a0:hover ~ .hover-bg {
        @include border-radius(20px);
    }

    a:not(.a0):hover ~ .hover-bg {
        @include border-radius(4px);
    }

    a.a0.active ~ .hover-bg {border-color: $red;}
    a.a1.active ~ .hover-bg {border-color: $blue;}
    a.a2.active ~ .hover-bg {border-color: $green;}
    a.a3.active ~ .hover-bg {border-color: $orange;}
    a.a0:hover ~ .hover-bg {border-color: $red;}
    a.a1:hover ~ .hover-bg {border-color: $blue;}
    a.a2:hover ~ .hover-bg {border-color: $green;}
    a.a3:hover ~ .hover-bg {border-color: $orange;}
    
}

#language-btn {
    display: inline-block; position: relative; z-index: 9997;
    width: 78px; height: 100%; padding: 22px 13px;

    @include ON_MOBILE {
        margin-right: 15px;
    }

    &:hover b {
        @include opacity(.8);
    }

    &:active b {
        @include transform(scale(.9));
        
        @include ON_REDUCED_MOTION {
            @include transform(none);
        }
    }
    
    b {
        display: inline-block; width: 100%; height: 100%;
        border: 1px solid #bebebe; overflow: hidden;
        background-repeat: no-repeat;
        @include background-size(100% 100%);
        @include border-radius(4px);
        @include transition(.2s);

        html[lang=en] & {@extend %flag-usa;}
        html[lang=de] & {@extend %flag-germany;}
    }
}

#hamburger-btn {
    display: inline-block; position: relative; z-index: 9999;
    width: 66px; height: 100%; padding: 18px 13px;
    @include transition(.1s);
    
    @include ON_DESKTOP {
        display: none;
    }
    
    b {
        display: inline-block; position: relative;
        width: 100%; height: 100%;
        @include transition(.4s);
    
        @include ON_REDUCED_MOTION {
            @include transition-property(none !important);
        }
    }
    
    &:active b {
        @include transform(scale(.9));
        @include transition(.1s);
    }
    
    i {
        position: absolute; left: 0; z-index: 1;
        width: 100%; height: 10%; // three 12% gaps between i's
        @include border-radius(3px);
        @include transition(all .2s, width .2s .2s, top .2s .2s, left .2s .2s);
    
        @include ON_REDUCED_MOTION {
            @include transition-property(none !important);
        }
        
        &.i1 {
            top: 0; z-index: 2;
            background-color: $red;
        }
        &.i2 {
            top: 12% + 16%;
            background-color: $blue;
        }
        &.i3 {
            top: (12% + 16%) * 2;
            background-color: $orange;
        }
        &.i4 {
            top: (12% + 16%) * 3; z-index: 3;
            background-color: $green;
        }
    }
    
    &.nav-visible {
        
        b {
            @include transform(rotateY(180deg));
            @include transition(.3s .25s);
        }
        
        i {
            top: 43.5%;
            width: 50%;
            @include transition(all .3s .25s, width .2s, top .2s, left .2s);
            
            &.i1, &.i3 {
                left: 0;
                @include transform-origin(right center);
            }
            
            &.i2, &.i4 {
                left: 50%;
                @include transform-origin(left center);
            }
        
            &.i1 {@include transform(rotate(45deg));}
            &.i2 {@include transform(rotate(-45deg));}
            &.i3 {@include transform(rotate(-45deg));}
            &.i4 {
                // stretched longer and translated to center of cross, 
                // to hide small empty spot in middle of cross
                width: 53%;
                @include transform(rotate(45deg) translate(-3%,0));
            }
            
        }
        
    }
}





#language-menu {
    z-index: 10000;
    
    .center {
        max-width: 400px;
    }
    
    .lang-select-btn {
        display: inline-block; position: relative;
        width: 100%; margin: 6px 0; padding: 25px 25px 25px 128px;
        color: #747474; font-size: 30px; line-height: 1em; text-decoration: none;
        @include text-wrap;
        @include border-radius(5px);
        @include transition(.2s);
        
        @include ON_REDUCED_MOTION {
            @include transition-property(none);
        }

        &.current {
            background: rgba(0,0,0,.05); cursor: auto;
        }

        &:not(.current):hover {
            background-color: rgba(0,0,0,.1);
        }

        &:before {
            content: '';
            display: block; position: absolute; top: 16px; left: 25px;
            width: 80px; height: 48px;
            border: 1px solid #bebebe; background-repeat: no-repeat;
            @include background-size(100% 100%);
            @include border-radius(3px);
        }

        &.en:before {@extend %flag-usa;}
        &.de:before {@extend %flag-germany;}
    }
        
    @include ON_PHONE {
        
        .center {
            max-width: 290px;
        }
        
        .content a {
            padding: 15px 15px 15px 90px;
            font-size: 24px;

            &:before {
                top: 9px; left: 15px;
                width: 60px; height: 36px;
            }
        }
    }
}





#to-top {
    position: relative;
    width: 100%; height: 120px; margin: 70px 0 0 0;
    background-color: $red;
    @include transition(.2s);
    
    b {
        display: block; position: absolute; top: 50%; left: 50%; z-index: 2;
        width: 40px; height: 40px;
        @include transform(translate(-50%,-50%));
        @include transition(.2s);
    }
    
    i {
        position: absolute; top: 0; left: 42.5%; z-index: 1;
        width: 15%;
        background-color: white;
        @include border-radius(4px);
        
        &.bar {
            height: 100%;
        }
        
        &.head1, &.head2 {
            height: 60%;
            @include transform-origin(top center);
            @include transition(.2s);
        }
        
        &.head1 {@include transform(rotate(-45deg) translate(0,-8%));}
        &.head2 {@include transform(rotate(45deg) translate(0,-8%));}
    }
    
    &:hover {
        
        b {
            top: 50%;
        }
        
        i {
            &.head1 {@include transform(rotate(-36deg) translate(0,-10%));}
            &.head2 {@include transform(rotate(36deg) translate(0,-10%));}
        }
    }
}